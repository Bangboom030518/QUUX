fn main () {{let component_5 = QUUXInitialise :: init (< QUUXInitialise as shared :: Component > :: Props {}) ; let rendered_component_5 = component_5 . render () ; shared :: RenderData {html : format ! ("<html lang=\"{}\">{}</html>" , "en" , String :: new () + & format ! ("<head >{}</head>" , String :: new ()) + & format ! ("<body >{}</body>" , String :: new () + & format ! ("<button >{}</button>" , String :: new () + & self . count . to_string ()) + & rendered_component_5 . html)) , render_context : shared :: RenderContext {id : shared :: generate_id () , children : vec ! [shared :: ClientComponentNode {component : shared :: postcard :: to_stdvec (& component_5) . expect ("Couldn't serialize component tree (QUUX internal)") , render_context : shared :: RenderContext {id : shared :: generate_id () , children : Vec :: new () ,} , static_id : "5" . to_string () ,}] ,}}}}